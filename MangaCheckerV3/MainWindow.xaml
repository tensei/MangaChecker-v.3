<controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:MangaCheckerV3"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:views="clr-namespace:MangaCheckerV3.Views"
    xmlns:viewModels="clr-namespace:MangaChecker.ViewModels.ViewModels;assembly=MangaChecker.ViewModels"
    x:Class="MangaCheckerV3.MainWindow"
    mc:Ignorable="d"
    Title="MangaChecker" Height="600" Width="900" SaveWindowPosition="True" ShowSystemMenuOnRightClick="True"
    TitleCharacterCasing="Normal" BorderThickness="1" GlowBrush="Black"
    NonActiveBorderBrush="Black"
    NonActiveGlowBrush="Black"
    Closing="MainWindow_OnClosing"
    NonActiveWindowTitleBrush="{DynamicResource HighlightBrush}"
    d:DataContext="{d:DesignInstance {x:Type viewModels:MainWindowViewModel}, IsDesignTimeCreatable=False}">
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding OpenViewerCommand}" ToolTip="Quick Viewer">
                <materialDesign:PackIcon Kind="Eye" />
            </Button>
            <Button ToolTip="Start/Stop" Command="{Binding StartStopCommand}">
                <materialDesign:PackIcon Kind="{Binding PausePlayButtonIcon, FallbackValue=Pause}" />
            </Button>
            <Button Command="{Binding RefreshCommand}" ToolTip="Re-Check">
                <materialDesign:PackIcon Kind="Refresh" />
            </Button>
            <!--<Button Command="{Binding NewCommand}" Content="New!"
					Visibility="{Binding NewMangas.Count, Converter={StaticResource NotZeroToVisibilityConverter}, Mode=OneWay}" />-->
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <ToggleButton IsChecked="{Binding MenuToggleButton, Mode=TwoWay}" ToolTip="Menu">
                <materialDesign:PackIcon Kind="Menu" />
            </ToggleButton>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>
    <materialDesign:DialogHost>
        <!--<materialDesign:DrawerHost.LeftDrawerContent>
				</materialDesign:DrawerHost.LeftDrawerContent>-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ListBox Grid.Column="0" SelectedIndex="{Binding DrawerIndex}"
                     Background="{DynamicResource HighlightBrush}"
                     Visibility="{Binding MenuToggleButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                     Foreground="{Binding TitleForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}">
                <!-- TODO make seleted item more visible out of focus -->
                <!--<ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="{x:Type ListBoxItem}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentColor2}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>-->
                <materialDesign:PackIcon Kind="Home" Height="20" Width="20" ToolTip="Home" />
                <materialDesign:PackIcon Kind="PlusBox" Height="20" Width="20" ToolTip="Add Manga" />
                <Separator Style="{DynamicResource MaterialDesignLightSeparator}" />
                <!--<materialDesign:PackIcon Kind="Brush" Height="20" Width="20" ToolTip="Theme" />-->
                <materialDesign:PackIcon Kind="NewBox" Height="20" Width="20" ToolTip="New Manga for Today" />
                <materialDesign:PackIcon Kind="History" Height="20" Width="20" ToolTip="History" />
                <materialDesign:PackIcon Kind="Book" Height="20" Width="20" ToolTip="Gallery" />
                <Separator Style="{DynamicResource MaterialDesignLightSeparator}" />
                <materialDesign:PackIcon Kind="Settings" Height="20" Width="20" ToolTip="Settings" />
            </ListBox>
            <materialDesign:Transitioner SelectedIndex="{Binding DrawerIndex}" Grid.Row="0" Grid.Column="1">
                <views:MangaListView DataContext="{Binding MangaListContext}" />
                <views:AddMangaView DataContext="{Binding AddContext}" />
                <Separator /> <!--workaround to use same index-->
                <!--<views:ThemeView DataContext="{Binding ThemeContext}" />-->
                <views:NewView DataContext="{Binding NewContext}" />
                <views:HistoryView DataContext="{Binding HistoryContext}" />
                <views:GalleryView DataContext="{Binding GalleryContext}" />
                <Separator />
                <views:SettingsView DataContext="{Binding SettingsContext}" />
            </materialDesign:Transitioner>
            <materialDesign:ColorZone Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Padding="4" Mode="Standard"
                                      materialDesign:ShadowAssist.ShadowDepth="Depth2">
                <Grid>
                    <TextBlock Text="{Binding ProviderService.Timer}" HorizontalAlignment="Right" />
                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center">
                        <Run Text="Status: " />
                        <Run Text=" " />
                        <Run Text="{Binding ProviderService.Status}" />
                    </TextBlock>
                </Grid>
            </materialDesign:ColorZone>
            <materialDesign:Snackbar Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                                     HorizontalAlignment="Stretch"
                                     MessageQueue="{Binding SnackbarQueue}" />
        </Grid>
    </materialDesign:DialogHost>
</controls:MetroWindow>